# Import librariesimport pandas as pdimport json# Read file and add commas to end of each line for compatibility with Python JSON formatreceipts = ''with open('receipts.json') as f:    for line in f:        receipts += line.strip('\n') + ',\n'# Format JSON as listreceipts = '[' + receipts[:-2] + ']'receipts = json.loads(receipts)# Modify default dictionary get method to return empty dictionary if value is Nonedef safe_get(dict_name, key, value_if_missing):    if dict_name.get(key, None) == None:        return dict()    else:        return dict_name[key]# Convert JSON file to dataframereceipts_df = pd.DataFrame()for receipt in receipts:    receipt_dict = dict()    receipt_dict['_id'] = [safe_get(receipt, '_id', dict()).get('$oid', None)]    receipt_dict['bonusPointsEarned'] = [receipt.get('bonusPointsEarned', None)]    receipt_dict['bonusPointsEarnedReason'] = [receipt.get('bonusPointsEarnedReason', None)]    receipt_dict['createDate'] = [safe_get(receipt, 'createDate', dict()).get('$date', None)]    receipt_dict['dateScanned'] = [safe_get(receipt, 'dateScanned', dict()).get('$date', None)]    receipt_dict['finishedDate'] = [safe_get(receipt, 'finishedDate', dict()).get('$date', None)]    receipt_dict['modifyDate'] = [safe_get(receipt, 'modifyDate', dict()).get('$date', None)]    receipt_dict['pointsAwardedDate'] = [safe_get(receipt, 'pointsAwardedDate', dict()).get('$date', None)]    receipt_dict['pointsEarned'] = [receipt.get('pointsEarned', None)]    receipt_dict['purchaseDate'] = [safe_get(receipt, 'purchaseDate', None).get('$date', None)]    receipt_dict['purchasedItemCount'] = [receipt.get('purchasedItemCount', None)]    receipt_dict['rewardsReceiptItemList'] = [receipt.get('rewardsReceiptItemList', None)]    receipt_dict['rewardsReceiptStatus'] = [receipt.get('rewardsReceiptStatus', None)]    receipt_dict['totalSpent'] = [receipt.get('totalSpent', None)]    receipt_dict['userId'] = [receipt.get('userId', None)]    receipts_df = receipts_df.append(pd.DataFrame(data = receipt_dict))    receipts_df['purchasedItemCount'] = pd.to_numeric(receipts_df['purchasedItemCount'])receipts_df['totalSpent'] = pd.to_numeric(receipts_df['totalSpent'])# Check that _id field is unique and not nullprint("Total receipt rows:", len(receipts_df['_id']))print("Unique receipt _id values:", receipts_df['_id'].nunique())print("Null receipt _id values:", sum(receipts_df['_id'].isna()))# Check that purchase dates are always prior to date of scanprint("Number of records where scan date is prior to purchase date: ",      sum((receipts_df['dateScanned'] - receipts_df['purchaseDate']).apply(lambda x: True if x < 0 else False)))# Compute 